{
	// Place your godfather workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"GodfatherCommand": {
		"scope": "typescript",
		"prefix": "command",
		"body": [
			"import { CommandOptions } from '@sapphire/framework';",
			"import { ApplyOptions } from '@sapphire/decorators';",
			"import GodfatherCommand from '@lib/GodfatherCommand';",
			"import { Message } from 'discord.js';",
			"",
			"@ApplyOptions<CommandOptions>({",
			"\tpreconditions: []",
			"})",
			"export default class extends GodfatherCommand {",
			"",
			"\tpublic async run(message: Message) {",
			"\t}",
			"",
			"}",
			""
		],
		"description": "Creates a Command"
	},
	"GodfatherEvent": {
		"scope": "typescript",
		"prefix": "event",
		"body": [
			"import { Event, Events, PieceContext } from '@sapphire/framework';",
			"",
			"export default class extends Event<Events.${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}> {",
			"",
			"\tpublic constructor(context: PieceContext) {",
			"\t\tsuper(context, { event: Events.${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} });",
			"\t}",
			"",
			"\tpublic run() {",
			"\t}",
			"",
			"}",
			""
		]
	},
	"GodfatherPrecondition": {
		"scope": "typescript",
		"prefix": "precondition",
		"body": [
			"import { Precondition } from '@sapphire/framework';",
			"import { Message } from 'discord.js';",
			"",
			"export default class extends Precondition {",
			"",
			"\tpublic run(message: Message) {",
			"\t\t",
			"\t}",
			"",
			"}",
			""
		]
	},
	"GodfatherRoleConstructor": {
		"scope": "typescript",
		"prefix": "roleCtor",
		"body": [
			"public constructor(player: Player) {",
			"\tsuper(player);",
			"\tthis.description = this.game.t('roles/neutral:${TM_FILENAME_BASE/(.*)/${1:/downcase}/g}Description');",
			"}"
		]
	},
	"GodfatherHelp": {
		"scope": "typescript",
		"prefix": "action",
		"body": [
			"this.actionText = this.game.t('roles/actions:${TM_FILENAME_BASE/(.*)/${1:/downcase}/g}Text');",
			"this.actionGerund = this.game.t('roles/actions:${TM_FILENAME_BASE/(.*)/${1:/downcase}/g}Gerund');"
		]
	}
}